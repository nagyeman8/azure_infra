name: Project_Name APP Pipeline
run-name: Terraform Application - ${{ github.event.inputs.environment || 'Project_Name-ENV' }}
on:
  push:
    branches:
      - 'feature/*'
      - 'master'
    paths:
      - 'terraform/**'    
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: Select the environment
        default: Project_Name-ENV
      plan:
        type: boolean
        description: 'Check to plan, uncheck to skip'
        default: true
      deploy:
        type: boolean
        description: 'Check to deploy, uncheck to skip'
        default: false   
jobs:
  Application:
    name: ${{ github.event.inputs.environment || 'Project_Name-ENV' }}
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'Project_Name-ENV' }}
    env:
      TERRAFORM_DIR: terraform/env/${{ github.event.inputs.environment || 'Project_Name-ENV' }}/app/
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    steps:
      - uses: actions/checkout@v2

      - name: Azure CLI login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
    
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: latest

      - name: Terraform Init
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: terraform init

      - name: Terraform Plan
        if: ${{ github.event.inputs.plan == 'true' || 'true' }}
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        if: ${{ github.event.inputs.deploy == 'true' }}
        working-directory: ${{ env.TERRAFORM_DIR }}
        run: terraform apply -auto-approve tfplan
